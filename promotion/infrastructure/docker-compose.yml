version: '3.8'
services:
  # 이미지: 최신 Redis 이미지를 사용합니다 (redis:latest).
  #컨테이너 이름: redis-practice로 지정하여 컨테이너를 명확히 식별할 수 있습니다.
  #포트 매핑: 호스트의 6379 포트를 컨테이너의 6379 포트에 연결합니다. 이는 Redis 기본 포트입니다.
  #볼륨: 로컬 디렉토리 ./redis-config를 컨테이너 내부의 /usr/local/etc/redis에 마운트하여 Redis 설정 파일을 제공할 수 있습니다.
  #명령어: Redis 서버를 실행하며, 사용자 정의 설정 파일(redis.conf)을 사용합니다.
  #네트워크: promotion_network라는 사용자 정의 네트워크에 연결됩니다.

  redis:
    image: redis:latest
    container_name: redis-practice
    ports:
      - "6379:6379"
    volumes:
      - ./redis-config:/usr/local/etc/redis
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - promotion_network

  # 
  kafka:
    image: confluentinc/cp-kafka:7.5.1 # Apache Kafka 3.5.x = Confluent Platform 7.5.x
    container_name: kafka
    ports:
      - "9092:9092"
    # 환경변수
    environment:
      # KRaft 필수 설정
      KAFKA_NODE_ID: 1  # 브로커 노드 ID
      CLUSTER_ID: 'cOdjrnDKEiE20Zkdiqdvcw'  # 클러스터 고유 식별자

      # 리스너 설정 : Kafka 브로커가 클라이언트 및 내부 통신을 위해 사용할 네트워크 인터페이스와 프로토콜을 정의함
      # 리스너 이름과 보안 프로토콜을 매핑합니다. CONTROLLER:PLAINTEXT → CONTROLLER 리스너는 암호화 없이 통신합니다.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      # 브로커가 수신 대기할 주소와 포트를 지정합니다.
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      # 클라이언트에게 반환될 실제 접속 주소입니다.
      #Docker 환경에서는 localhost:9092로 설정해 외부 연결을 가능하게 합니다.
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'

      # KRaft 모드 설정 :  ZooKeeper 없이 Kafka 자체적으로 메타데이터를 관리하기 위한 KRaft 모드를 활성화
      KAFKA_PROCESS_ROLES: 'broker,controller'  # 브로커와 컨트롤러 역할을 동시에 수행
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'  # 컨트롤러 노드의 식별자와 포트를 지정합니다.  형식: 노드ID@호스트:포트 (예: 1@kafka:9093).
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'  # 클러스터 고유 식별자로, KRaft 메타데이터 관리에 사용됩니다.

      # 복제 관련 설정 : 데이터 내구성과 고가용성을 보장하기 위해 복제 설정을 구성합니다.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    networks:
      - promotion_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9090:9090"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - promotion_network    # 네트워크 추가
    depends_on:
      - kafka

networks: # 네트워크 정의 추가
  promotion_network:
    driver: bridge